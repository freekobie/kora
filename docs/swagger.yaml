definitions:
  handler.AccessResponse:
    properties:
      access:
        $ref: '#/definitions/session.UserAccess'
      status:
        type: integer
    type: object
  handler.Response:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  handler.SessionResponse:
    properties:
      session:
        $ref: '#/definitions/session.UserSession'
      status:
        type: integer
    type: object
  handler.UserResponse:
    properties:
      status:
        type: integer
      user:
        $ref: '#/definitions/model.User'
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      lastModified:
        type: string
      name:
        type: string
      profilePhoto:
        type: string
      role:
        type: string
      verified:
        type: boolean
    type: object
  session.UserAccess:
    properties:
      accessToken:
        type: string
      expiresAt:
        type: string
    type: object
  session.UserSession:
    properties:
      expiresAt:
        type: string
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
info:
  contact:
    email: support@kora.local
    name: API Support
    url: https://github.com/freekobie/kora
  description: This is the backend API for the Kora file management application.
  title: Backend for Kora file management
  version: "1.0"
paths:
  /auth/access:
    post:
      consumes:
      - application/json
      description: Get a new access token using a refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refreshToken
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Refresh access token
      tags:
      - users
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return session tokens
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Login user
      tags:
      - users
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Register a new user
      tags:
      - users
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Verify a user's email with a code
      parameters:
      - description: Verification info
        in: body
        name: verification
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Verify user email
      tags:
      - users
  /auth/verify/request:
    post:
      consumes:
      - application/json
      description: Request a new verification code for a user
      parameters:
      - description: User email
        in: body
        name: email
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Request verification email
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - users
    get:
      description: Get user details by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
  /users/profile:
    patch:
      consumes:
      - application/json
      description: Update user profile information
      parameters:
      - description: User update info
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Update user data
      tags:
      - users
swagger: "2.0"
